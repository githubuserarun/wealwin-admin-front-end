{"ast":null,"code":"import { toast } from 'react-toastify';\nexport function validateUsername(username) {\n  if (!username) {\n    return \"Username cannot be empty.\";\n  }\n  if (username.length < 3 || username.length > 20) {\n    toast.error(\"Username must be between 3 and 20 characters.\");\n    return;\n  }\n  if (!/^[a-zA-Z0-9_]+$/.test(username)) {\n    toast.error(\"Username can only contain letters, numbers, and underscores.\");\n    return;\n  }\n  return null;\n}\nexport function validatePassword(password) {\n  if (!password) {\n    return \"Password cannot be empty.\";\n  }\n  if (password.length < 8 || password.length > 20) {\n    toast.error(\"Password must be between 8 and 20 characters.\");\n    return;\n  }\n  if (!/[a-z]/.test(password) || !/[A-Z]/.test(password) || !/[0-9]/.test(password) || !/[!@#$%^&*()_+{}\\[\\]:;<>,.?~\\\\-]/.test(password)) {\n    toast.error(\"Password must contain at least one lowercase letter, one uppercase letter, one number, and one special character.\");\n    return;\n  }\n  return null;\n}\nexport function validateEmail(email) {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (!emailRegex.test(email)) {\n    return \"Please enter a valid email address.\";\n  }\n  return null;\n}","map":{"version":3,"names":["toast","validateUsername","username","length","error","test","validatePassword","password","validateEmail","email","emailRegex"],"sources":["/home/dev/Arun/Task/interview/Task_2/Admin_frontend/src/Components/validators.js"],"sourcesContent":["import { toast } from 'react-toastify';\n\nexport function validateUsername(username) {\n  if (!username) {\n    return \"Username cannot be empty.\";\n  }\n\n  if (username.length < 3 || username.length > 20) {\n    toast.error(\"Username must be between 3 and 20 characters.\");\n    return;\n  }\n\n  if (!/^[a-zA-Z0-9_]+$/.test(username)) {\n    toast.error(\"Username can only contain letters, numbers, and underscores.\");\n    return;\n  }\n\n  return null;\n}\n\nexport function validatePassword(password) {\n  if (!password) {\n    return \"Password cannot be empty.\";\n  }\n\n  if (password.length < 8 || password.length > 20) {\n    toast.error(\"Password must be between 8 and 20 characters.\");\n    return;\n  }\n\n  if (!/[a-z]/.test(password) || !/[A-Z]/.test(password) || !/[0-9]/.test(password) || !/[!@#$%^&*()_+{}\\[\\]:;<>,.?~\\\\-]/.test(password)) {\n    toast.error(\"Password must contain at least one lowercase letter, one uppercase letter, one number, and one special character.\");\n    return;\n  }\n\n  return null;\n}\n\nexport function validateEmail(email) {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n  if (!emailRegex.test(email)) {\n    return \"Please enter a valid email address.\";\n  }\n\n  return null;\n}\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,gBAAgB;AAEtC,OAAO,SAASC,gBAAgBA,CAACC,QAAQ,EAAE;EACzC,IAAI,CAACA,QAAQ,EAAE;IACb,OAAO,2BAA2B;EACpC;EAEA,IAAIA,QAAQ,CAACC,MAAM,GAAG,CAAC,IAAID,QAAQ,CAACC,MAAM,GAAG,EAAE,EAAE;IAC/CH,KAAK,CAACI,KAAK,CAAC,+CAA+C,CAAC;IAC5D;EACF;EAEA,IAAI,CAAC,iBAAiB,CAACC,IAAI,CAACH,QAAQ,CAAC,EAAE;IACrCF,KAAK,CAACI,KAAK,CAAC,8DAA8D,CAAC;IAC3E;EACF;EAEA,OAAO,IAAI;AACb;AAEA,OAAO,SAASE,gBAAgBA,CAACC,QAAQ,EAAE;EACzC,IAAI,CAACA,QAAQ,EAAE;IACb,OAAO,2BAA2B;EACpC;EAEA,IAAIA,QAAQ,CAACJ,MAAM,GAAG,CAAC,IAAII,QAAQ,CAACJ,MAAM,GAAG,EAAE,EAAE;IAC/CH,KAAK,CAACI,KAAK,CAAC,+CAA+C,CAAC;IAC5D;EACF;EAEA,IAAI,CAAC,OAAO,CAACC,IAAI,CAACE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAACF,IAAI,CAACE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAACF,IAAI,CAACE,QAAQ,CAAC,IAAI,CAAC,iCAAiC,CAACF,IAAI,CAACE,QAAQ,CAAC,EAAE;IACtIP,KAAK,CAACI,KAAK,CAAC,mHAAmH,CAAC;IAChI;EACF;EAEA,OAAO,IAAI;AACb;AAEA,OAAO,SAASI,aAAaA,CAACC,KAAK,EAAE;EACnC,MAAMC,UAAU,GAAG,4BAA4B;EAE/C,IAAI,CAACA,UAAU,CAACL,IAAI,CAACI,KAAK,CAAC,EAAE;IAC3B,OAAO,qCAAqC;EAC9C;EAEA,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}